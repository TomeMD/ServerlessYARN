
- name: Create apps directory
  delegate_to: localhost
  file:
    path: "{{ installation_path }}/apps/{{ app_name }}"
    state: directory
  tags: create_app

- name: Copy apptainer containers definition file
  delegate_to: localhost
  template:
    src: "templates/{{ template_definition_file }}"
    dest: "{{ installation_path }}/apps/{{ app_name }}/{{ definition_file }}"
  tags: create_app

- name: Copy app files directory
  delegate_to: localhost
  when: "files_dir != ''"
  copy:
    src: "apps/{{ files_dir }}"
    dest: "{{ installation_path }}/apps/{{ app_name }}"
  tags: never, create_app

- name: Copy app install script
  delegate_to: localhost
  when: "install_script != ''"
  copy:
    src: "apps/{{ install_script }}"
    dest: "{{ installation_path }}/apps/{{ app_name }}/{{ install_script }}"
  tags: never, create_app

- name: Build image
  delegate_to: localhost
  shell: "singularity build apps/{{ app_name }}/{{ image_file }} apps/{{ app_name }}/{{ definition_file }}"
  args:
    chdir: "{{ installation_path }}"
    executable: /bin/bash
    creates: "apps/{{ app_name }}/{{ image_file }}"
  tags: create_app

- name: Create images directory
  file:
    path: "{{ installation_path }}/images"
    state: directory

- name: Check if image is already copied
  stat:
    path: "{{ installation_path }}/images/{{ image_file }}"
  register: stat_output

- name: Copy image to host
  when: not stat_output.stat.exists
  copy:
    src: "{{ installation_path }}/apps/{{ app_name }}/{{ image_file }}"
    dest: "{{ installation_path }}/images/{{ image_file }}"
    mode: preserve

- name: Copy apptainer containers cgroup config
  template:
    src: "templates/{{ cgroups_file }}"
    dest: "{{ installation_path }}/{{ cgroups_file }}"

- name: Check containers status
  shell: sudo singularity instance list -j
  register: apptainer_list_output
  args:
    executable: /bin/bash

- name: Create directories to bind to containers
  file:
    path: "{{ installation_path }}/singularity_binds/{{ item }}"
    state: directory
  with_items: "{{ container_list | split(',') if container_list is defined else hostvars[inventory_hostname].containers }}"

- name: Start apptainer containers
  shell: "sudo singularity instance start -C --hostname {{ item }} --apply-cgroups {{ cgroups_file }} --bind ./singularity_binds/{{ item }}:/opt/bind images/{{ image_file }} {{ item }}"
  when: "'\"instance\": \"{{ item }}\",' not in apptainer_list_output.stdout"
  args:
    chdir: "{{ installation_path }}"
    executable: /bin/bash
  with_items: "{{ container_list | split(',') if container_list is defined else hostvars[inventory_hostname].containers }}"

## Fix to get the right permissions on cgroups files
- name: Copy cgroups v1 permission changer script
  copy:
    src: scripts/change_cgroupsv1_permissions.py
    dest: "{{ installation_path }}/change_cgroupsv1_permissions.py"
    mode: preserve

- name: Change cgroups v1 permissions
  shell: "python3 change_cgroupsv1_permissions.py singularity {{ item }}"
  args:
    chdir: "{{ installation_path }}"
    executable: /bin/bash
  with_items: "{{ container_list | split(',') if container_list is defined else hostvars[inventory_hostname].containers }}"
