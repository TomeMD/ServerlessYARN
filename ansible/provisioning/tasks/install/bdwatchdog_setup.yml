        
- name: Check if BDWatchdog directory is already there
  stat:
    path: "{{ bdwatchdog_path }}"
  register: stat_output
        
## get the user executing the playbook
- name: get the username running the deploy
  become: no
  local_action: command whoami
  register: username_on_the_host

- name: Copy BDWatchdog
  when: not stat_output.stat.exists
  copy:
    src: bdwatchdog/
    dest: "{{ bdwatchdog_path }}"

- name: Create a BDWatchdog data directory
  file:
    path: "{{ installation_path }}/BDWatchdog_data"
    state: directory
    owner: "{{ username_on_the_host.stdout_lines[0] }}"
    recurse: yes

- name: Install BDWatchdog
  shell: bash install.sh
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/"
    executable: /bin/bash
    creates: "{{ bdwatchdog_path }}/deployment/metrics/opentsdb/build/tsdb"

## Stop tmux sessions created by root
- name: Tmux session check
  shell: tmux ls
  register: tmux_output
  ignore_errors: yes

- name: Stop TIMESTAMPING Service
  shell: tmux kill-session -t EVE_TIMES
  when: "'EVE_TIMES' in tmux_output.stdout"

- name: Stop OPENTSDB
  #shell: tmux kill-session -t OPENTSDB
  shell: bash stop.sh
  when: "'OPENTSDB' in tmux_output.stdout"
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/metrics"
    executable: /bin/bash

- name: Change BDWatchdog dir owner
  file:
    path: "{{ bdwatchdog_path }}"
    state: directory
    owner: "{{ username_on_the_host.stdout_lines[0] }}"
    recurse: yes

- name: Change BDWatchdog data dir owner
  file:
    path: "{{ installation_path }}/BDWatchdog_data"
    state: directory
    owner: "{{ username_on_the_host.stdout_lines[0] }}"
    recurse: yes
